local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Workspace = game:GetService("Workspace") -- Added for ESP 2

local player = Players.LocalPlayer 
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.Name = "HurryGUI"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Increased main frame width to accommodate new tab
local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 420, 0, 380) -- Increased width to accommodate 4 tabs
mainFrame.Position = UDim2.new(0, 20, 0, 20)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.BorderSizePixel = 0
local mainCorner = Instance.new("UICorner", mainFrame)
mainCorner.CornerRadius = UDim.new(0, 16)

-- Purple border
local purpleBorder = Instance.new("Frame", mainFrame)
purpleBorder.Position = UDim2.new(0, -2, 0, -2)
purpleBorder.Size = UDim2.new(1, 4, 1, 4)
purpleBorder.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
purpleBorder.ZIndex = -1
local borderCorner = Instance.new("UICorner", purpleBorder)
borderCorner.CornerRadius = UDim.new(0, 18)

local titleBar = Instance.new("Frame", mainFrame)
titleBar.Size = UDim2.new(1, 0, 0, 45)
titleBar.BackgroundTransparency = 1

local titleLabel = Instance.new("TextLabel", titleBar)
titleLabel.Size = UDim2.new(1, -55, 1, 0)
titleLabel.Position = UDim2.new(0, 15, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "czwuyi hub V.1" -- Preserved user's text
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 18
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

local minimizeBtn = Instance.new("TextButton", titleBar)
minimizeBtn.Size = UDim2.new(0, 35, 0, 35)
minimizeBtn.Position = UDim2.new(1, -45, 0, 5)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
minimizeBtn.Text = "‚àí"
minimizeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 18
minimizeBtn.BorderSizePixel = 0
local minCorner = Instance.new("UICorner", minimizeBtn)
minCorner.CornerRadius = UDim.new(0, 8)

-- Tab System
local tabFrame = Instance.new("Frame", mainFrame)
tabFrame.Size = UDim2.new(1, -20, 0, 40)
tabFrame.Position = UDim2.new(0, 10, 0, 50)
tabFrame.BackgroundTransparency = 1

local function createModernTab(parent, text, position, sizeX)
    local tab = Instance.new("TextButton", parent)
    tab.Size = UDim2.new(sizeX or 0.25, -7, 1, 0) -- Adjusted sizeX for more tabs
    tab.Position = position
    tab.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    tab.Text = text
    tab.TextColor3 = Color3.fromRGB(255, 255, 255)
    tab.Font = Enum.Font.GothamBold
    tab.TextSize = 14
    tab.BorderSizePixel = 0
    
    local corner = Instance.new("UICorner", tab)
    corner.CornerRadius = UDim.new(0, 10)
    
    return tab
end

-- Adjusted tab positions and sizes for 4 tabs
local mainTab = createModernTab(tabFrame, "‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å", UDim2.new(0, 0, 0, 0), 0.25)
local day99Tab = createModernTab(tabFrame, "99 day", UDim2.new(0.25, 3, 0, 0), 0.25)
local espTab = createModernTab(tabFrame, "Eps", UDim2.new(0.5, 6, 0, 0), 0.25)
local moreTab = createModernTab(tabFrame, "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°", UDim2.new(0.75, 9, 0, 0), 0.25)

-- Content Frames for each tab - adjusted height to fit optimized frame
local mainContent = Instance.new("Frame", mainFrame)
mainContent.Size = UDim2.new(1, -20, 1, -100)
mainContent.Position = UDim2.new(0, 10, 0, 95)
mainContent.BackgroundTransparency = 1
mainContent.Visible = true

local day99Content = Instance.new("Frame", mainFrame)
day99Content.Size = UDim2.new(1, -20, 1, -100)
day99Content.Position = UDim2.new(0, 10, 0, 95)
day99Content.BackgroundTransparency = 1
day99Content.Visible = false

local espContent = Instance.new("Frame", mainFrame)
espContent.Size = UDim2.new(1, -20, 1, -100)
espContent.Position = UDim2.new(0, 10, 0, 95)
espContent.BackgroundTransparency = 1
espContent.Visible = false

local moreContent = Instance.new("Frame", mainFrame)
moreContent.Size = UDim2.new(1, -20, 1, -100)
moreContent.Position = UDim2.new(0, 10, 0, 95)
moreContent.BackgroundTransparency = 1
moreContent.Visible = false

-- Modern button creation function with reduced button height
local function createModernButton(parent, text, position, size)
    local button = Instance.new("TextButton", parent)
    button.Size = size or UDim2.new(1, 0, 0, 45) -- Reduced from 50 to 45
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 16
    button.BorderSizePixel = 0
    
    local corner = Instance.new("UICorner", button)
    corner.CornerRadius = UDim.new(0, 12)
    
    -- Hover effect
    button.MouseEnter:Connect(function()
        local tween = TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(138, 43, 226)})
        tween:Play()
    end)
    
    button.MouseLeave:Connect(function()
        local tween = TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(25, 25, 25)})
        tween:Play()
    end)
    
    return button
end

-- Main Tab Buttons with tighter spacing
local stealBtn = createModernButton(mainContent, "‡∏Ç‡πÇ‡∏°‡∏¢(‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÑ‡∏î‡πâ)", UDim2.new(0, 0, 0, 0))
local floatBtn = createModernButton(mainContent, "‡∏•‡∏≠‡∏¢", UDim2.new(0, 0, 0, 50))
local freecamBtn = createModernButton(mainContent, "‡∏Å‡∏•‡πâ‡∏≠‡∏áüì∑", UDim2.new(0, 0, 0, 100))
local antikickBtn = createModernButton(mainContent, "auto kick (‡∏≠‡∏¢‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏Ñ)", UDim2.new(0, 0, 0, 150))
local godmodeBtn = createModernButton(mainContent, "God mode", UDim2.new(0, 0, 0, 200))

-- 99 Day Tab Buttons
local warpToCapBtn = createModernButton(day99Content, "‡∏ß‡∏≤‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏Ñ‡∏õ", UDim2.new(0, 0, 0, 0))
local warpToPlayerBtn = createModernButton(day99Content, "‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏õ‡πÑ‡∏õ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô", UDim2.new(0, 0, 0, 50))
local warpToStationBtn = createModernButton(day99Content, "‡∏ß‡∏≤‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏ï‡πà‡∏≤‡∏á ‡πÜ", UDim2.new(0, 0, 0, 100)) -- NEW BUTTON

-- ESP Tab Button
local espBtn = createModernButton(espContent, "‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠ Player", UDim2.new(0, 0, 0, 0))
local esp2Btn = createModernButton(espContent, "‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≠‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå", UDim2.new(0, 0, 0, 50))

-- More Tab Buttons with tighter spacing
local analyzeBtn = createModernButton(moreContent, "‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏£‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏û‡∏Ç‡∏≠‡∏á‡∏°‡∏∂‡∏á", UDim2.new(0, 0, 0, 0))
local serverhopBtn = createModernButton(moreContent, "‡∏£‡∏µ‡πÄ‡∏ã‡∏¥‡∏û", UDim2.new(0, 0, 0, 50))
local removeWallsBtn = createModernButton(moreContent, "‡∏•‡∏ö‡∏Å‡∏≥‡πÅ‡∏û‡∏á", UDim2.new(0, 0, 0, 100)) -- NEW BUTTON

-- Credits label in More tab - moved up to eliminate space
local creditsLabel = Instance.new("TextLabel", moreContent)
creditsLabel.Size = UDim2.new(1, 0, 0, 40)
creditsLabel.Position = UDim2.new(0, 0, 0, 155) -- Moved down to accommodate new button
creditsLabel.BackgroundTransparency = 1
creditsLabel.Text = "Credits to czwuyi_AV"
creditsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
creditsLabel.Font = Enum.Font.GothamBold
creditsLabel.TextSize = 14
creditsLabel.TextXAlignment = Enum.TextXAlignment.Center

-- Tab System Logic
local currentTab = "Main"

local function switchTab(tab)
    -- Reset all tab colors
    local inactiveColor = Color3.fromRGB(20, 20, 20)
    local activeColor = Color3.fromRGB(138, 43, 226)
    
    mainTab.BackgroundColor3 = inactiveColor
    mainTab.TextColor3 = Color3.fromRGB(255, 255, 255)
    day99Tab.BackgroundColor3 = inactiveColor
    day99Tab.TextColor3 = Color3.fromRGB(255, 255, 255)
    espTab.BackgroundColor3 = inactiveColor
    espTab.TextColor3 = Color3.fromRGB(255, 255, 255)
    moreTab.BackgroundColor3 = inactiveColor
    moreTab.TextColor3 = Color3.fromRGB(255, 255, 255)
    
    -- Hide all content frames
    mainContent.Visible = false
    day99Content.Visible = false
    espContent.Visible = false
    moreContent.Visible = false
    
    -- Hide player list UI if visible
    if playerListFrame and playerListFrame.Visible then
        playerListFrame.Visible = false
        clearPlayerESP() -- Clear player ESP when tab changes
    end

    -- Hide station list UI if visible
    if stationListFrame and stationListFrame.Visible then
        stationListFrame.Visible = false
    end

    -- Deactivate ESP 2 if switching away from ESP tab
    if currentTab == "ESP" and tab ~= "ESP" then
        if esp2On then
            esp2On = false
            esp2Btn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            esp2Btn.Text = "‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≠‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå"
            if esp2LoopConnection then
                esp2LoopConnection:Disconnect()
                esp2LoopConnection = nil
            end
            clearAllESP2()
        end
    end

    -- Show selected tab
    if tab == "Main" then
        mainTab.BackgroundColor3 = activeColor
        mainTab.TextColor3 = Color3.fromRGB(255, 255, 255)
        mainContent.Visible = true
    elseif tab == "99Day" then
        day99Tab.BackgroundColor3 = activeColor
        day99Tab.TextColor3 = Color3.fromRGB(255, 255, 255)
        day99Content.Visible = true
    elseif tab == "ESP" then
        espTab.BackgroundColor3 = activeColor
        espTab.TextColor3 = Color3.fromRGB(255, 255, 255)
        espContent.Visible = true
    elseif tab == "More" then
        moreTab.BackgroundColor3 = activeColor
        moreTab.TextColor3 = Color3.fromRGB(255, 255, 255)
        moreContent.Visible = true
    end
    
    currentTab = tab
end

mainTab.MouseButton1Click:Connect(function() switchTab("Main") end)
day99Tab.MouseButton1Click:Connect(function() switchTab("99Day") end)
espTab.MouseButton1Click:Connect(function() switchTab("ESP") end)
moreTab.MouseButton1Click:Connect(function() switchTab("More") end)

-- STEAL BUTTON FUNCTIONALITY
stealBtn.MouseButton1Click:Connect(function()
    local originalText = stealBtn.Text
    stealBtn.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡πÇ‡∏°‡∏¢‡∏Ñ‡∏±‡∏ö ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠.."
    stealBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
    
    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") and char:FindFirstChild("Humanoid") then
        -- Ragdoll the character first
        local humanoid = char.Humanoid
        humanoid.PlatformStand = true
        humanoid:ChangeState(Enum.HumanoidStateType.Physics) -- Makes character ragdoll
        
        -- Wait a brief moment for ragdoll to take effect
        task.wait(0.1)
        
        -- Then teleport
        local pos = CFrame.new(0, -500, 0)
        local startT = os.clock()
        while os.clock() - startT < 1 do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = pos
            end
            task.wait()
        end
        
        -- Un-ragdoll after teleportation
        if char and char:FindFirstChild("Humanoid") then
            humanoid.PlatformStand = false
            humanoid:ChangeState(Enum.HumanoidStateType.Running)
        end
    end
    
    -- Reset button after operation
    task.wait(0.5)
    stealBtn.Text = originalText
    stealBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
end)

-- FLOAT FUNCTIONALITY
local floatOn = false
local floatForce
floatBtn.MouseButton1Click:Connect(function()
    local char = player.Character or player.CharacterAdded:Wait()
    local root = char:WaitForChild("HumanoidRootPart")
    if floatOn then
        if floatForce then floatForce:Destroy() end
        floatBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        floatBtn.Text = "‡∏•‡∏≠‡∏¢"
    else
        floatForce = Instance.new("BodyVelocity")
        floatForce.Velocity = Vector3.new(0, 20, 0)
        floatForce.MaxForce = Vector3.new(0, 1e5, 0)
        floatForce.P = 1000
        floatForce.Parent = root
        floatBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
        floatBtn.Text = "‡∏õ‡∏¥‡∏î‡∏•‡∏≠‡∏¢"
    end
    floatOn = not floatOn
end)

-- FREECAM FUNCTIONALITY
freecamBtn.MouseButton1Click:Connect(function()
    pcall(function() -- Added pcall for safety
        loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Freecam'))()
    end)
end)

-- ANTI-KICK FUNCTIONALITY
antikickBtn.MouseButton1Click:Connect(function()
    local originalText = antikickBtn.Text
    antikickBtn.Text = "‡∏£‡∏≠.."
    antikickBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
    
    pcall(function()
        loadstring(game:HttpGet("https://pastefy.app/dAjYZBnq/raw"))()
    end)
    
    task.wait(1)
    antikickBtn.Text = "‡∏ö‡∏±‡∏Ñ‡∏≠‡∏¢‡∏π‡πà"
    antikickBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
end)

-- GOD MODE FUNCTIONALITY
local godModeOn = false
godmodeBtn.MouseButton1Click:Connect(function()
    local char = player.Character
    if not char then return end
    
    local humanoid = char:FindFirstChild("Humanoid")
    if not humanoid then return end
    
    godModeOn = not godModeOn
    
    if godModeOn then
        -- Enable god mode
        humanoid.MaxHealth = math.huge
        humanoid.Health = math.huge
        
        -- Protect against health changes
        local connection
        connection = humanoid.HealthChanged:Connect(function()
            if godModeOn then
                humanoid.Health = math.huge
            else
                connection:Disconnect()
            end
        end)
        
        -- Visual feedback
        godmodeBtn.Text = "‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ßü§°"
        godmodeBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
    else
        -- Disable god mode
        humanoid.MaxHealth = 100
        humanoid.Health = 100
        
        -- Visual feedback
        godmodeBtn.Text = "God mode"
        godmodeBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    end
end)

-- NEW: WARP TO CAP FUNCTIONALITY (8, 8, 8)
warpToCapBtn.MouseButton1Click:Connect(function()
    local originalText = warpToCapBtn.Text
    warpToCapBtn.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏≤‡∏õ..."
    warpToCapBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)

    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.CFrame = CFrame.new(8, 8, 8)
    end

    task.wait(0.5)
    warpToCapBtn.Text = originalText
    warpToCapBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
end)

-- NEW: WARP TO PLAYER FUNCTIONALITY
local playerListFrame -- Declare outside to manage visibility
local playerESPInstances = {} -- To store BoxHandleAdornments for player ESP

local function clearPlayerESP()
    for _, adornment in pairs(playerESPInstances) do
        if adornment then adornment:Destroy() end
    end
    playerESPInstances = {}
end

local function createPlayerESP(targetPlayer)
    local char = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
    local rootPart = char:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end

    local adornment = Instance.new("BoxHandleAdornment")
    adornment.Adornee = rootPart
    adornment.Color3 = Color3.fromRGB(255, 0, 0) -- Red box
    adornment.Transparency = 0.5
    adornment.ZIndex = 2 -- Higher ZIndex to be visible
    adornment.AlwaysOnTop = true
    adornment.Size = rootPart.Size + Vector3.new(0.5, 0.5, 0.5) -- Slightly larger than the part
    adornment.Parent = CoreGui -- Parent to CoreGui for visibility
    playerESPInstances[targetPlayer] = adornment

    -- Update adornment size if character changes
    local charAddedConn, charRemovingConn
    charAddedConn = targetPlayer.CharacterAdded:Connect(function(newChar)
        local newRoot = newChar:WaitForChild("HumanoidRootPart")
        adornment.Adornee = newRoot
        adornment.Size = newRoot.Size + Vector3.new(0.5, 0.5, 0.5)
    end)
    charRemovingConn = targetPlayer.CharacterRemoving:Connect(function()
        adornment.Adornee = nil -- Clear adornee when character is removed
    end)

    -- Clean up connections when adornment is destroyed
    adornment.Destroying:Connect(function()
        if charAddedConn then charAddedConn:Disconnect() end
        if charRemovingConn then charRemovingConn:Disconnect() end
    end)
end

local function updatePlayerList()
    -- Clear existing list items
    for _, child in pairs(playerListScrollingFrame:GetChildren()) do
        if child:IsA("Frame") and child.Name == "PlayerEntry" then
            child:Destroy()
        end
    end
    clearPlayerESP() -- Clear existing ESP boxes

    local yOffset = 0
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player then
            createPlayerESP(p) -- Create ESP for each player
            
            local playerEntry = Instance.new("Frame")
            playerEntry.Name = "PlayerEntry"
            playerEntry.Size = UDim2.new(1, 0, 0, 30)
            playerEntry.Position = UDim2.new(0, 0, 0, yOffset)
            playerEntry.BackgroundTransparency = 1
            playerEntry.Parent = playerListScrollingFrame -- Parent to scrolling frame

            local playerNameLabel = Instance.new("TextLabel")
            playerNameLabel.Size = UDim2.new(0.7, 0, 1, 0)
            playerNameLabel.Position = UDim2.new(0, 0, 0, 0)
            playerNameLabel.BackgroundTransparency = 1
            playerNameLabel.Text = p.Name
            playerNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            playerNameLabel.Font = Enum.Font.GothamBold
            playerNameLabel.TextSize = 14
            playerNameLabel.TextXAlignment = Enum.TextXAlignment.Left
            playerNameLabel.Parent = playerEntry

            local warpButton = createModernButton(playerEntry, "Warp", UDim2.new(0.7, 5, 0, 0), UDim2.new(0.3, -5, 0, 30))
            warpButton.TextSize = 12
            warpButton.MouseButton1Click:Connect(function()
                local char = player.Character
                local targetChar = p.Character
                if char and char:FindFirstChild("HumanoidRootPart") and targetChar and targetChar:FindFirstChild("HumanoidRootPart") then
                    char.HumanoidRootPart.CFrame = targetChar.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0) -- Warp slightly above target
                end
                playerListFrame.Visible = false -- Hide list after warping
                clearPlayerESP() -- Clear ESP when list closes
            end)

            yOffset = yOffset + 35 -- Spacing for next entry
        end
    end
    playerListScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, yOffset) -- Update canvas size
end

-- Create the player list sub-frame (hidden initially)
playerListFrame = Instance.new("Frame", day99Content)
playerListFrame.Size = UDim2.new(1, 0, 1, -100) -- Adjusted size to fit below buttons
playerListFrame.Position = UDim2.new(0, 0, 0, 100) -- Position below warp buttons
playerListFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
playerListFrame.BorderSizePixel = 0
playerListFrame.Visible = false
local listCorner = Instance.new("UICorner", playerListFrame)
listCorner.CornerRadius = UDim.new(0, 10)

local playerListScrollingFrame = Instance.new("ScrollingFrame", playerListFrame)
playerListScrollingFrame.Size = UDim2.new(1, 0, 1, -30) -- Leave space for close button
playerListScrollingFrame.Position = UDim2.new(0, 0, 0, 0)
playerListScrollingFrame.BackgroundTransparency = 1
playerListScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Will be updated dynamically
playerListScrollingFrame.ScrollBarThickness = 6
playerListScrollingFrame.VerticalScrollBarInset = Enum.ScrollBarInset.Always


local playerListCloseBtn = createModernButton(playerListFrame, "‡∏õ‡∏¥‡∏î", UDim2.new(0, 0, 1, -30), UDim2.new(1, 0, 0, 30))
playerListCloseBtn.MouseButton1Click:Connect(function()
    playerListFrame.Visible = false
    clearPlayerESP() -- Clear ESP when closing
end)

warpToPlayerBtn.MouseButton1Click:Connect(function()
    playerListFrame.Visible = true
    updatePlayerList()
end)

-- ESP Functionality (Player Names)
local espOn = false
local espLabels = {}

local function createESPLabel(targetPlayer)
    local char = targetPlayer.Character or targetPlayer.CharacterAdded:Wait()
    local rootPart = char:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end

    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Size = UDim2.new(0, 150, 0, 50)
    billboardGui.AlwaysOnTop = true
    billboardGui.ExtentsOffset = Vector3.new(0, 2, 0) -- Offset above character
    billboardGui.Adornee = rootPart
    billboardGui.Parent = CoreGui

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextScaled = true
    textLabel.TextStrokeTransparency = 0
    textLabel.Text = targetPlayer.Name
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.Font = Enum.Font.GothamBold
    textLabel.Parent = billboardGui

    espLabels[targetPlayer] = billboardGui

    -- Update adornee if character changes
    local charAddedConn, charRemovingConn
    charAddedConn = targetPlayer.CharacterAdded:Connect(function(newChar)
        local newRoot = newChar:WaitForChild("HumanoidRootPart")
        billboardGui.Adornee = newRoot
    end)
    charRemovingConn = targetPlayer.CharacterRemoving:Connect(function()
        billboardGui.Adornee = nil -- Clear adornee when character is removed
    end)

    -- Clean up connections when billboardGui is destroyed
    billboardGui.Destroying:Connect(function()
        if charAddedConn then charAddedConn:Disconnect() end
        if charRemovingConn then charRemovingConn:Disconnect() end
    end)
end

local function clearESP()
    for player, label in pairs(espLabels) do
        if label then label:Destroy() end
    end
    espLabels = {}
end

local function updatePlayerESP()
    if espOn then
        clearESP()
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player then
                createESPLabel(p)
            end
        end
    else
        clearESP()
    end
end

Players.PlayerAdded:Connect(function(p)
    if espOn and p ~= player then
        createESPLabel(p)
    end
end)

Players.PlayerRemoving:Connect(function(p)
    if espLabels[p] then
        espLabels[p]:Destroy()
        espLabels[p] = nil
    end
end)

espBtn.MouseButton1Click:Connect(function()
    espOn = not espOn
    if espOn then
        espBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
        espBtn.Text = "‡∏õ‡∏¥‡∏î‡∏ä‡∏∑‡πà‡∏≠ Player"
    else
        espBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        espBtn.Text = "‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠ Player"
    end
    updatePlayerESP()
end)

-- ESP 2 Functionality (Monster/NPC Names)
local esp2On = false
local esp2Labels = {}
local esp2LoopConnection

local function isMonster(instance)
    -- This is a very basic check. You might need to adjust this
    -- based on how monsters/NPCs are identified in your specific game.
    -- Common indicators: has a Humanoid, not a player's character,
    -- or specific model names/tags.
    if instance:IsA("Model") and instance:FindFirstChildOfClass("Humanoid") then
        if not Players:GetPlayerFromCharacter(instance) then
            -- Check for common monster naming conventions or tags
            local name = instance.Name:lower()
            return name:find("monster") or name:find("enemy") or name:find("npc") or name:find("creature") or name:find("zombie")
        end
    end
    return false
end

local function createESP2Label(targetInstance)
    local humanoid = targetInstance:FindFirstChildOfClass("Humanoid")
    local rootPart = targetInstance:FindFirstChild("HumanoidRootPart") or (humanoid and humanoid.RootPart)

    if not rootPart then return end

    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Size = UDim2.new(0, 150, 0, 50)
    billboardGui.AlwaysOnTop = true
    billboardGui.ExtentsOffset = Vector3.new(0, 2, 0)
    billboardGui.Adornee = rootPart
    billboardGui.Parent = CoreGui

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextScaled = true
    textLabel.TextStrokeTransparency = 0
    textLabel.Text = targetInstance.Name
    textLabel.TextColor3 = Color3.fromRGB(0, 255, 0) -- Green for monsters
    textLabel.Font = Enum.Font.GothamBold
    textLabel.Parent = billboardGui

    esp2Labels[targetInstance] = billboardGui

    -- Update adornee if instance moves or is re-parented (simple check)
    local conn
    conn = RunService.Heartbeat:Connect(function()
        if not targetInstance or not targetInstance.Parent or not rootPart or not rootPart.Parent then
            if esp2Labels[targetInstance] then
                esp2Labels[targetInstance]:Destroy()
                esp2Labels[targetInstance] = nil
            end
            if conn then conn:Disconnect() end
            return
        end
        billboardGui.Adornee = rootPart -- Re-assign to ensure it follows
    end)
end

local function clearAllESP2()
    for instance, label in pairs(esp2Labels) do
        if label then label:Destroy() end
    end
    esp2Labels = {}
end

local function updateESP2()
    clearAllESP2()
    if esp2On then
        for _, child in pairs(Workspace:GetDescendants()) do
            if isMonster(child) then
                createESP2Label(child)
            end
        end
    end
end

local function startESP2Loop()
    if esp2LoopConnection then esp2LoopConnection:Disconnect() end
    esp2LoopConnection = RunService.Heartbeat:Connect(function()
        if esp2On then
            updateESP2() -- Continuously update for new/removed monsters
        else
            if esp2LoopConnection then esp2LoopConnection:Disconnect() end
            esp2LoopConnection = nil
        end
    end)
end

esp2Btn.MouseButton1Click:Connect(function()
    esp2On = not esp2On
    if esp2On then
        esp2Btn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
        esp2Btn.Text = "‡∏õ‡∏¥‡∏î‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≠‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå"
        startESP2Loop()
    else
        esp2Btn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        esp2Btn.Text = "‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≠‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå"
        if esp2LoopConnection then
            esp2LoopConnection:Disconnect()
            esp2LoopConnection = nil
        end
        clearAllESP2()
    end
end)

-- ANALYZE BUTTON FUNCTIONALITY
analyzeBtn.MouseButton1Click:Connect(function()
    local originalText = analyzeBtn.Text
    analyzeBtn.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå.."
    analyzeBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)

    local richestPlayerName = "‡πÑ‡∏°‡πà‡∏û‡∏ö"
    local maxCash = -1

    -- Attempt to find a "leaderstats" or similar folder in players
    for _, p in pairs(Players:GetPlayers()) do
        local leaderstats = p:FindFirstChild("leaderstats") or p:FindFirstChild("Stats") or p:FindFirstChild("Data")
        if leaderstats then
            for _, stat in pairs(leaderstats:GetChildren()) do
                if stat:IsA("IntValue") or stat:IsA("NumberValue") then
                    -- Common names for cash/money stats
                    local statNameLower = stat.Name:lower()
                    if statNameLower:find("cash") or statNameLower:find("money") or statNameLower:find("coins") or statNameLower:find("points") then
                        if stat.Value > maxCash then
                            maxCash = stat.Value
                            richestPlayerName = p.Name
                        end
                    end
                end
            end
        end
    end

    analyzeBtn.Text = "‡∏Ñ‡∏ô‡∏£‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î: " .. richestPlayerName
    analyzeBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 127)

    -- Reset button after a few seconds
    task.delay(5, function()
        analyzeBtn.Text = originalText
        analyzeBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    end)
end)

-- SERVER HOP FUNCTIONALITY
serverhopBtn.MouseButton1Click:Connect(function()
    local originalText = serverhopBtn.Text
    serverhopBtn.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏µ‡πÄ‡∏ã‡∏¥‡∏û.."
    serverhopBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)

    -- Get a list of active servers for the current game
    local success, err = pcall(function()
        TeleportService:TeleportToPlaceInstance(game.PlaceId, TeleportService.GetPlayerPlaceInstanceAsync().instanceId)
    end)

    if not success then
        warn("Failed to server hop: " .. err)
        serverhopBtn.Text = "‡∏£‡∏µ‡πÄ‡∏ã‡∏¥‡∏û‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
        serverhopBtn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        task.delay(2, function()
            serverhopBtn.Text = originalText
            serverhopBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        end)
    end
end)

---
### **‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡∏•‡∏ö‡∏Å‡∏≥‡πÅ‡∏û‡∏á" (Remove Walls) - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏•‡∏ö‡∏´‡∏ç‡πâ‡∏≤**
---
local wallsRemoved = false
removeWallsBtn.MouseButton1Click:Connect(function()
    wallsRemoved = not wallsRemoved
    if wallsRemoved then
        removeWallsBtn.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
        removeWallsBtn.Text = "‡∏Ñ‡∏∑‡∏ô‡∏Å‡∏≥‡πÅ‡∏û‡∏á"

        -- Iterate through all parts in the workspace
        for _, part in pairs(Workspace:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide and part.Transparency < 0.5 then
                -- Add checks to avoid grass or terrain by Material or Name
                local isTerrainMaterial = (part.Material == Enum.Material.Grass or
                                           part.Material == Enum.Material.LeafyGrass or
                                           part.Material == Enum.Material.Slate or
                                           part.Material == Enum.Material.Sand or
                                           part.Material == Enum.Material.Concrete or
                                           part.Material == Enum.Material.Rock or
                                           part.Material == Enum.Material.Ground)
                
                local nameLower = part.Name:lower()
                local isNamedTerrain = (nameLower:find("terrain") or 
                                        nameLower:find("ground") or 
                                        nameLower:find("grass") or
                                        nameLower:find("tree") or -- Also avoid trees
                                        nameLower:find("bush") or -- And bushes
                                        nameLower:find("foliage")) -- And foliage

                if not isTerrainMaterial and not isNamedTerrain then
                    -- Check if it's likely a wall (e.g., larger than a player, not a character part)
                    local isCharacterPart = false
                    local character = player.Character
                    if character then
                        for _, charPart in pairs(character:GetDescendants()) do
                            if part == charPart then
                                isCharacterPart = true
                                break
                            end
                        end
                    end

                    if not isCharacterPart and part.Size.Y > 5 and (part.Size.X > 5 or part.Size.Z > 5) then
                        part.CanCollide = false
                        part.Transparency = 0.7
                    end
                end
            end
        end
    else
        removeWallsBtn.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        removeWallsBtn.Text = "‡∏•‡∏ö‡∏Å‡∏≥‡πÅ‡∏û‡∏á"

        -- Restore original properties (this is a simple restore, might not be perfect for all cases)
        -- A more robust solution would store original properties before changing them.
        for _, part in pairs(Workspace:GetDescendants()) do
            if part:IsA("BasePart") and part.Transparency > 0.5 then
                 -- This tries to revert only parts that were likely modified.
                 -- It's best practice to store original properties if you need perfect restoration.
                part.CanCollide = true
                part.Transparency = 0
            end
        end
    end
end)

---
### **‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡∏ß‡∏≤‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏ï‡πà‡∏≤‡∏á ‡πÜ" (Warp to Different Stations)**
---
local stationListFrame -- Declare outside
local stations = {
    {"‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏´‡∏•‡∏±‡∏Å", CFrame.new(100, 10, 0)}, -- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡πÄ‡∏Å‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    {"‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏õ‡πà‡∏≤", CFrame.new(-200, 50, 300)},
    {"‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏†‡∏π‡πÄ‡∏Ç‡∏≤", CFrame.new(500, 100, -150)},
    {"‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏ó‡∏∞‡πÄ‡∏•‡∏ó‡∏£‡∏≤‡∏¢", CFrame.new(-400, 20, -500)},
    -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    -- {"‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì", CFrame.new(X, Y, Z)},
}

local function updateStationList()
    -- Clear existing list items
    for _, child in pairs(stationListScrollingFrame:GetChildren()) do
        if child:IsA("Frame") and child.Name == "StationEntry" then
            child:Destroy()
        end
    end

    local yOffset = 0
    for _, stationData in ipairs(stations) do
        local name = stationData[1]
        local position = stationData[2]

        local stationEntry = Instance.new("Frame")
        stationEntry.Name = "StationEntry"
        stationEntry.Size = UDim2.new(1, 0, 0, 30)
        stationEntry.Position = UDim2.new(0, 0, 0, yOffset)
        stationEntry.BackgroundTransparency = 1
        stationEntry.Parent = stationListScrollingFrame

        local stationNameLabel = Instance.new("TextLabel")
        stationNameLabel.Size = UDim2.new(0.7, 0, 1, 0)
        stationNameLabel.Position = UDim2.new(0, 0, 0, 0)
        stationNameLabel.BackgroundTransparency = 1
        stationNameLabel.Text = name
        stationNameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        stationNameLabel.Font = Enum.Font.GothamBold
        stationNameLabel.TextSize = 14
        stationNameLabel.TextXAlignment = Enum.TextXAlignment.Left
        stationNameLabel.Parent = stationEntry

        local warpButton = createModernButton(stationEntry, "Warp", UDim2.new(0.7, 5, 0, 0), UDim2.new(0.3, -5, 0, 30))
        warpButton.TextSize = 12
        warpButton.MouseButton1Click:Connect(function()
            local char = player.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                char.HumanoidRootPart.CFrame = position + Vector3.new(0, 5, 0) -- Warp slightly above target
            end
            stationListFrame.Visible = false -- Hide list after warping
        end)

        yOffset = yOffset + 35 -- Spacing for next entry
    end
    stationListScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, yOffset) -- Update canvas size
end

-- Create the station list sub-frame (hidden initially)
stationListFrame = Instance.new("Frame", day99Content)
stationListFrame.Size = UDim2.new(1, 0, 1, -100) -- Adjusted size to fit below buttons
stationListFrame.Position = UDim2.new(0, 0, 0, 145) -- Position below warp buttons and new station button
stationListFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
stationListFrame.BorderSizePixel = 0
stationListFrame.Visible = false
local stationListCorner = Instance.new("UICorner", stationListFrame)
stationListCorner.CornerRadius = UDim.new(0, 10)

local stationListScrollingFrame = Instance.new("ScrollingFrame", stationListFrame)
stationListScrollingFrame.Size = UDim2.new(1, 0, 1, -30) -- Leave space for close button
stationListScrollingFrame.Position = UDim2.new(0, 0, 0, 0)
stationListScrollingFrame.BackgroundTransparency = 1
stationListScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Will be updated dynamically
stationListScrollingFrame.ScrollBarThickness = 6
stationListScrollingFrame.VerticalScrollBarInset = Enum.ScrollBarInset.Always


local stationListCloseBtn = createModernButton(stationListFrame, "‡∏õ‡∏¥‡∏î", UDim2.new(0, 0, 1, -30), UDim2.new(1, 0, 0, 30))
stationListCloseBtn.MouseButton1Click:Connect(function()
    stationListFrame.Visible = false
end)

warpToStationBtn.MouseButton1Click:Connect(function()
    stationListFrame.Visible = true
    updateStationList()
end)


-- Initial tab setup
switchTab("Main")

-- Draggable functionality for mainFrame
local dragging
local dragInput
local dragStart
local startPos

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.Ended then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragging then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end
end)

minimizeBtn.MouseButton1Click:Connect(function()
    screenGui.Enabled = not screenGui.Enabled
end)

-- Cleanup on gui removal
screenGui.ParentChanged:Connect(function()
    if not screenGui.Parent then
        clearESP()
        clearAllESP2()
        clearPlayerESP()
        if esp2LoopConnection then
            esp2LoopConnection:Disconnect()
            esp2LoopConnection = nil
        end
        if floatForce then floatForce:Destroy() end
    end
end)
